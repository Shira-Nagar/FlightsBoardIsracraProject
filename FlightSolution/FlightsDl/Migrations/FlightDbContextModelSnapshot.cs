// <auto-generated />
using System;
using FlightsDl;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightsDl.Migrations
{
    [DbContext(typeof(FlightDbContext))]
    partial class FlightDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("FlightEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("FlightsEntity.UserFlight", b =>
                {
                    b.Property<int>("UserLogInId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FlightEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeatNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("UserLogInId", "FlightEntityId");

                    b.HasIndex("FlightEntityId");

                    b.ToTable("UserFlight");
                });

            modelBuilder.Entity("FlightsEntity.UserLogIn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserLogIns");
                });

            modelBuilder.Entity("FlightsEntity.UserFlight", b =>
                {
                    b.HasOne("FlightEntity", "FlightEntity")
                        .WithMany("UserFlights")
                        .HasForeignKey("FlightEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightsEntity.UserLogIn", "UserLogIn")
                        .WithMany("UserFlights")
                        .HasForeignKey("UserLogInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlightEntity");

                    b.Navigation("UserLogIn");
                });

            modelBuilder.Entity("FlightEntity", b =>
                {
                    b.Navigation("UserFlights");
                });

            modelBuilder.Entity("FlightsEntity.UserLogIn", b =>
                {
                    b.Navigation("UserFlights");
                });
#pragma warning restore 612, 618
        }
    }
}
